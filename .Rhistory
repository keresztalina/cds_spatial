flats$rooms <- as.numeric(flats$rooms)
flats$size <- as.numeric(flats$size)
# rename column for easier understanding
names(flats)[names(flats) == "price"] <- "price_per_sq_meter"
# create column for total price by multiplying the price per square meter
# with the amount of square meters
flats$price_total <- flats$price_per_sq_meter * flats$size
# separate into 2 columns by comma
flats <- flats %>%
separate_wider_delim(location,
delim = ",",
names = c("latitude",
"longitude"))
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str <- gsub(". ker端let,* *.*",
"",
flats$location_str)
flats$location_str <- as.roman(flats$location_str)
# install packages
#install.packages("tidyverse")
# load packages
library(tidyverse)
library(tidyr)
flats <- read.csv("data/flats.csv")
flats <- flats %>%
select(!c(X,
common_cost,
date_scraped,
description,
furniture,
image_folder_name,
image_urls,
title))
# convert to factor
flats$animals <- as.factor(flats$animals)
# convert contents to English
levels(flats$animals) <- c(NA,
"only small pets",
"yes",
"no")
# convert to factor
flats$condition <- as.factor(flats$condition)
# convert contents to English
levels(flats$condition) <- c(NA,
"in need of renovation",
"renovated",
"good",
"newly built",
"like new")
# convert to factor
flats$elevator <- as.factor(flats$elevator)
# convert contents to English
levels(flats$elevator)
levels(flats$elevator) <- c(NA,
"no",
"yes")
# convert to factor
flats$energy_certificate <- as.factor(flats$energy_certificate)
# convert contents to English
levels(flats$energy_certificate) <- c(NA,
"a",
"a+",
"b",
"c",
"d",
"e",
"f",
"g",
"h",
"i" )
# convert to factor
flats$garden <- as.factor(flats$garden)
# convert contents to English
levels(flats$garden) <- c(NA,
"yes",
"no")
# convert to factor
flats$heating_type <- as.factor(flats$heating_type)
# convert contents to English
levels(flats$heating_type) <- c(NA,
"other",
"central heating with own meter (entire building)",
"electric",
"circulated hot water",
"gas convection",
"central heating (entire building)",
"fireplace",
"central heating (apartment)",
"district heating")
# convert to factor
flats$type <- as.factor(flats$type)
# convert contents to English
levels(flats$type) <- c(NA,
"other",
"prefabricated concrete",
"brick")
# convert to factor
flats$view_type <- as.factor(flats$view_type)
# convert contents to English
levels(flats$view_type) <- c(NA,
"garden",
"whole panorama",
"partial panorama",
"nature",
"yard",
"street")
flats$price <- as.numeric(flats$price)
flats$rooms <- as.numeric(flats$rooms)
flats$size <- as.numeric(flats$size)
# rename column for easier understanding
names(flats)[names(flats) == "price"] <- "price_per_sq_meter"
# create column for total price by multiplying the price per square meter
# with the amount of square meters
flats$price_total <- flats$price_per_sq_meter * flats$size
# separate into 2 columns by comma
flats <- flats %>%
separate_wider_delim(location,
delim = ",",
names = c("latitude",
"longitude"))
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str <- gsub(". ker端let,* *.*",
"",
flats$location_str)
flats$location_str <- gsub(" ",
"",
flats$location_str)
flats$quarter <- as.roman(flats$location_str)
flats$quarter <- as.numeric(flats$quarter)
flats$location_str <- as.roman(flats$location_str)
flats$location_str <- as.numeric(flats$location_str)
names(flats)[names(flats) == "location_str"] <- "quarter"
View(flats)
# install packages
#install.packages("tidyverse")
# load packages
library(tidyverse)
library(tidyr)
flats <- read.csv("data/flats.csv")
flats <- flats %>%
select(!c(X,
common_cost,
date_scraped,
description,
furniture,
image_folder_name,
image_urls,
title))
# convert to factor
flats$animals <- as.factor(flats$animals)
# convert contents to English
levels(flats$animals) <- c(NA,
"only small pets",
"yes",
"no")
# convert to factor
flats$condition <- as.factor(flats$condition)
# convert contents to English
levels(flats$condition) <- c(NA,
"in need of renovation",
"renovated",
"good",
"newly built",
"like new")
# convert to factor
flats$elevator <- as.factor(flats$elevator)
# convert contents to English
levels(flats$elevator)
levels(flats$elevator) <- c(NA,
"no",
"yes")
# convert to factor
flats$energy_certificate <- as.factor(flats$energy_certificate)
# convert contents to English
levels(flats$energy_certificate) <- c(NA,
"a",
"a+",
"b",
"c",
"d",
"e",
"f",
"g",
"h",
"i" )
# convert to factor
flats$garden <- as.factor(flats$garden)
# convert contents to English
levels(flats$garden) <- c(NA,
"yes",
"no")
# convert to factor
flats$heating_type <- as.factor(flats$heating_type)
# convert contents to English
levels(flats$heating_type) <- c(NA,
"other",
"central heating with own meter (entire building)",
"electric",
"circulated hot water",
"gas convection",
"central heating (entire building)",
"fireplace",
"central heating (apartment)",
"district heating")
# convert to factor
flats$type <- as.factor(flats$type)
# convert contents to English
levels(flats$type) <- c(NA,
"other",
"prefabricated concrete",
"brick")
# convert to factor
flats$view_type <- as.factor(flats$view_type)
# convert contents to English
levels(flats$view_type) <- c(NA,
"garden",
"whole panorama",
"partial panorama",
"nature",
"yard",
"street")
flats$price <- as.numeric(flats$price)
flats$rooms <- as.numeric(flats$rooms)
flats$size <- as.numeric(flats$size)
# rename column for easier understanding
names(flats)[names(flats) == "price"] <- "price_per_sq_meter"
# create column for total price by multiplying the price per square meter
# with the amount of square meters
flats$price_total <- flats$price_per_sq_meter * flats$size
# separate into 2 columns by comma
flats <- flats %>%
separate_wider_delim(location,
delim = ",",
names = c("latitude",
"longitude"))
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str <- gsub(". ker端let,* *.*",
"",
flats$location_str)
flats$location_str <- gsub(" ",
"",
flats$location_str)
flats$location_str <- as.roman(flats$location_str)
flats$location_str <- as.numeric(flats$location_str)
names(flats)[names(flats) == "location_str"] <- "quarter"
View(flats)
# load packages
library(tidyverse)
library(tidyr)
flats <- read.csv("data/flats.csv")
flats <- flats %>%
select(!c(X,
common_cost,
date_scraped,
description,
furniture,
image_folder_name,
image_urls,
title))
# convert to factor
flats$animals <- as.factor(flats$animals)
# convert contents to English
levels(flats$animals) <- c(NA,
"only small pets",
"yes",
"no")
# convert to factor
flats$condition <- as.factor(flats$condition)
# convert contents to English
levels(flats$condition) <- c(NA,
"in need of renovation",
"renovated",
"good",
"newly built",
"like new")
# convert to factor
flats$elevator <- as.factor(flats$elevator)
# convert contents to English
levels(flats$elevator)
levels(flats$elevator) <- c(NA,
"no",
"yes")
# convert to factor
flats$energy_certificate <- as.factor(flats$energy_certificate)
# convert contents to English
levels(flats$energy_certificate) <- c(NA,
"a",
"a+",
"b",
"c",
"d",
"e",
"f",
"g",
"h",
"i" )
# convert to factor
flats$garden <- as.factor(flats$garden)
# convert contents to English
levels(flats$garden) <- c(NA,
"yes",
"no")
# convert to factor
flats$heating_type <- as.factor(flats$heating_type)
# convert contents to English
levels(flats$heating_type) <- c(NA,
"other",
"central heating with own meter (entire building)",
"electric",
"circulated hot water",
"gas convection",
"central heating (entire building)",
"fireplace",
"central heating (apartment)",
"district heating")
# convert to factor
flats$type <- as.factor(flats$type)
# convert contents to English
levels(flats$type) <- c(NA,
"other",
"prefabricated concrete",
"brick")
# convert to factor
flats$view_type <- as.factor(flats$view_type)
# convert contents to English
levels(flats$view_type) <- c(NA,
"garden",
"whole panorama",
"partial panorama",
"nature",
"yard",
"street")
flats$price <- as.numeric(flats$price)
flats$rooms <- as.numeric(flats$rooms)
flats$size <- as.numeric(flats$size)
# rename column for easier understanding
names(flats)[names(flats) == "price"] <- "price_per_sq_meter"
# create column for total price by multiplying the price per square meter
# with the amount of square meters
flats$price_total <- flats$price_per_sq_meter * flats$size
# separate into 2 columns by comma
flats <- flats %>%
separate_wider_delim(location,
delim = ",",
names = c("latitude",
"longitude"))
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str <- gsub(". ker端let,* *.*",
"",
flats$location_str)
flats$location_str <- gsub(" ",
"",
flats$location_str)
flats$location_str <- as.roman(flats$location_str)
flats$location_str <- as.numeric(flats$location_str)
names(flats)[names(flats) == "location_str"] <- "quarter"
View(flats)
write.csv(flats,
"data/flats_revised.csv")
stops <- read.csv("data/stops.txt")
View(stops)
stops <- read.csv("data/stops.txt")
stop_times <- read.csv("data/stop_times.txt")
trips <- read.csv("data/trips.txt")
routes <- read.csv("data/routes.txt")
View(trips)
View(routes)
r <- routes %>%
select(route_id,
route_short_name,
route_type)
View(r)
rm(routes)
t <- trips %>%
select(route_id,
trip_id)
rm(trips)
View(stop_times)
st <- stop_times %>%
select(trip_id,
stop_id)
rm(stop_times)
s <- stops %>%
select(stop_id,
stop_name,
stop_lat,
stop_lon)
View(s)
rm(stops)
View(s)
View(st)
df <- left_join(s, st)
View(df)
is.na(df)
df[is.na(df$trip_id)]
df[is.na(df$trip_id)]
df[is.na(df$trip_id),]
df <- df %>%
filter(!is.na(trip_id))
rm(st)
rm(s) # remove unnecessary data frame
View(t)
# join with data of possible routes
df <- left_join(df, t)
df[is.na(df$route_id)]
df[is.na(df$route_id),]
rm(t) # remove unnecessary data frame
unique(r$route_type)
# convert variable to factor for easier processing
r$route_type <- as.factor(r$route_type)
levels(r$route_type)
r[r$route_type == "0"]
r[r$route_type == "0",]
levels(r$route_type)
r[r$route_type == "1",]
r[r$route_type == "3",]
levels(r$route_type)
r[r$route_type == "4",]
levels(r$route_type)
r[r$route_type == "11",]
levels(r$route_type)
r[r$route_type == "109",]
levels(r$route_type) <- c("tram",
"metro",
"bus",
"ship",
"trolleybus",
"commuter rail")
# define levels
levels(r$route_type) <- c("tram",
"metro",
"bus",
"ship",
"trolleybus",
"commuter rail")
# join with data of route info
df <- left_join(df, r)
df2 <- df %>%
select(!c(trip_id,
route_id,
route_short_name))
View(df2)
df2 <- unique(df2)
df_transformed <- df2 %>%
mutate(route_type = as.character(route_type)) %>%
pivot_wider(id_cols = c(stop_id, stop_name, stop_lat, stop_lon),
names_from = route_type,
values_from = route_type,
values_fn = function(x) as.integer(!is.na(x)))
View(df_transformed)
View(df2)
df2 <- df %>%
select(!c(stop_id,
trip_id,
route_id,
route_short_name))
df2 <- unique(df2)
stops_cleaned <- df2 %>%
group_by(stop_name, route_type) %>%
summarise(lat = mean(stop_lat),
lon = mean(stop_lon))
View(stops_cleaned)
write.csv(stops_cleaned,
"data/stops_revised.csv")

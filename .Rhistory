mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 10)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0("<a href='",
url,
"' target='_blank'>Click here</a>"))
}
mymap
mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 12)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0("<a href='",
url,
"' target='_blank'>Click here</a>"))
}
mymap
mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 12)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0("<a href='",
url,
"' target='_blank'>See listing</a>"))
}
mymap
mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 12)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0("<strong>Price:</strong> ",
price,
", ",
"<a href='",
url,
"' target='_blank'>See listing</a>"))
}
mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 12)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
price <- selection$price[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0("<strong>Price:</strong> ",
price,
", ",
"<a href='",
url,
"' target='_blank'>See listing</a>"))
}
mymap
mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 12)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
price <- selection$price[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0(price,
" HUF, ",
"<a href='",
url,
"' target='_blank'>See listing</a>"))
}
mymap
View(flats)
View(selection)
# Does the flat allow pets?
my_animals_choice <- c("yes",
"only small pets")
# What is the condition of the flat?
my_condition_choice <- c("newly built",
"like new",
"renovated",
"good")
# Does the building have an elevator?
my_elevator_choice <- c("yes")
# Which quarter of Budapest is the flat located in?
my_quarter_choice <- c(1, 2, 3, 4, 5,
6, 7, 8, 9, 10,
11, 12, 13, 14, 15,
16, 17, 18, 19, 20,
21, 22, 23)
# What is the price range for the apartment?
my_min_price <- 50000
my_max_price <- 150000
# How many rooms does the flat have?
my_rooms_choice <- c(2, 3, 4, 5)
# How big is the flat?
my_min_size <- 40
my_max_size <- 120
# How far in meters is the flat from the center of Budapest?
my_min_distance_center <- 0
my_max_distance_center <- 5000
# How far in meters is the flat from the nearest public transport stop of any kind?
my_min_distance_stop_any <- 0
my_max_distance_stop_any <- 100
# How far in meters is the flat from the nearest railway-type public transport stop?
my_min_distance_stop_rail <- 0
my_max_distance_stop_rail <- 7000
show_options <- function(data,
animals_choice,
condition_choice,
elevator_choice,
quarter_choice,
min_price,
max_price,
rooms_choice,
min_size,
max_size,
min_distance_center,
max_distance_center,
min_distance_stop_any,
max_distance_stop_any,
min_distance_stop_rail,
max_distance_stop_rail) {
##### FILTER DATA BY INPUT PARAMETERS
selection <- flats %>%
# apply animals filter
filter(animals %in% animals_choice) %>%
# apply condition filter
filter(condition %in% condition_choice) %>%
# apply elevator choice
filter(elevator %in% elevator_choice) %>%
# apply quarter choice
filter(quarter %in% quarter_choice) %>%
# apply price choice
filter(price >= min_price & price <= max_price) %>%
# apply room number choice
filter(rooms %in% rooms_choice) %>%
# apply size choice
filter(size >= min_size & size <= max_size) %>%
# apply distance from center choice
filter(distance_to_bud_center >= min_distance_center & distance_to_bud_center <= max_distance_center) %>%
# apply distance from any public transport filter
filter(nearest_stop_distance >= min_distance_stop_any & nearest_stop_distance <= max_distance_stop_any) %>%
# apply distance from rails transport filter
filter(nearest_stop_distance_rail >= min_distance_stop_rail & nearest_stop_distance_rail <= max_distance_stop_rail)
##### PLOT
if (nrow(result_df) == 0) {
print("There are no listings that match your criteria. Please broaden your search parameters.\n")
} else {
mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 12)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
price <- selection$price[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0(price,
" HUF, ",
"<a href='",
url,
"' target='_blank'>See listing</a>"))
}
mymap
}
}
show_options(flats,
my_animals_choice,
my_condition_choice,
my_elevator_choice,
my_quarter_choice,
my_min_price,
my_max_price,
my_rooms_choice,
my_min_size,
my_max_size,
my_min_distance_center,
my_max_distance_center,
my_min_distance_stop_any,
my_max_distance_stop_any,
my_min_distance_stop_rail,
my_max_distance_stop_rail)
show_options <- function(data,
animals_choice,
condition_choice,
elevator_choice,
quarter_choice,
min_price,
max_price,
rooms_choice,
min_size,
max_size,
min_distance_center,
max_distance_center,
min_distance_stop_any,
max_distance_stop_any,
min_distance_stop_rail,
max_distance_stop_rail) {
##### FILTER DATA BY INPUT PARAMETERS
selection <- flats %>%
# apply animals filter
filter(animals %in% animals_choice) %>%
# apply condition filter
filter(condition %in% condition_choice) %>%
# apply elevator choice
filter(elevator %in% elevator_choice) %>%
# apply quarter choice
filter(quarter %in% quarter_choice) %>%
# apply price choice
filter(price >= min_price & price <= max_price) %>%
# apply room number choice
filter(rooms %in% rooms_choice) %>%
# apply size choice
filter(size >= min_size & size <= max_size) %>%
# apply distance from center choice
filter(distance_to_bud_center >= min_distance_center & distance_to_bud_center <= max_distance_center) %>%
# apply distance from any public transport filter
filter(nearest_stop_distance >= min_distance_stop_any & nearest_stop_distance <= max_distance_stop_any) %>%
# apply distance from rails transport filter
filter(nearest_stop_distance_rail >= min_distance_stop_rail & nearest_stop_distance_rail <= max_distance_stop_rail)
##### PLOT
if (nrow(selection) == 0) {
print("There are no listings that match your criteria. Please broaden your search parameters.\n")
} else {
mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 12)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
price <- selection$price[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0(price,
" HUF, ",
"<a href='",
url,
"' target='_blank'>See listing</a>"))
}
mymap
}
}
show_options(flats,
my_animals_choice,
my_condition_choice,
my_elevator_choice,
my_quarter_choice,
my_min_price,
my_max_price,
my_rooms_choice,
my_min_size,
my_max_size,
my_min_distance_center,
my_max_distance_center,
my_min_distance_stop_any,
my_max_distance_stop_any,
my_min_distance_stop_rail,
my_max_distance_stop_rail)
# Does the flat allow pets?
my_animals_choice <- c("yes",
"only small pets")
# What is the condition of the flat?
my_condition_choice <- c("newly built",
"like new",
"renovated",
"good")
# Does the building have an elevator?
my_elevator_choice <- c("yes")
# Which quarter of Budapest is the flat located in?
my_quarter_choice <- c(1, 2, 3, 4, 5,
6, 7, 8, 9, 10,
11, 12, 13, 14, 15,
16, 17, 18, 19, 20,
21, 22, 23)
# What is the price range for the apartment?
my_min_price <- 50000
my_max_price <- 150000
# How many rooms does the flat have?
my_rooms_choice <- c(2, 3, 4, 5)
# How big is the flat?
my_min_size <- 40
my_max_size <- 120
# How far in meters is the flat from the center of Budapest?
my_min_distance_center <- 0
my_max_distance_center <- 5000
# How far in meters is the flat from the nearest public transport stop of any kind?
my_min_distance_stop_any <- 0
my_max_distance_stop_any <- 10
# How far in meters is the flat from the nearest railway-type public transport stop?
my_min_distance_stop_rail <- 0
my_max_distance_stop_rail <- 7000
show_options(flats,
my_animals_choice,
my_condition_choice,
my_elevator_choice,
my_quarter_choice,
my_min_price,
my_max_price,
my_rooms_choice,
my_min_size,
my_max_size,
my_min_distance_center,
my_max_distance_center,
my_min_distance_stop_any,
my_max_distance_stop_any,
my_min_distance_stop_rail,
my_max_distance_stop_rail)
show_options <- function(data,
animals_choice,
condition_choice,
elevator_choice,
quarter_choice,
min_price,
max_price,
rooms_choice,
min_size,
max_size,
min_distance_center,
max_distance_center,
min_distance_stop_any,
max_distance_stop_any,
min_distance_stop_rail,
max_distance_stop_rail) {
##### FILTER DATA BY INPUT PARAMETERS
selection <- flats %>%
# apply animals filter
filter(animals %in% animals_choice) %>%
# apply condition filter
filter(condition %in% condition_choice) %>%
# apply elevator choice
filter(elevator %in% elevator_choice) %>%
# apply quarter choice
filter(quarter %in% quarter_choice) %>%
# apply price choice
filter(price >= min_price & price <= max_price) %>%
# apply room number choice
filter(rooms %in% rooms_choice) %>%
# apply size choice
filter(size >= min_size & size <= max_size) %>%
# apply distance from center choice
filter(distance_to_bud_center >= min_distance_center & distance_to_bud_center <= max_distance_center) %>%
# apply distance from any public transport filter
filter(nearest_stop_distance >= min_distance_stop_any & nearest_stop_distance <= max_distance_stop_any) %>%
# apply distance from rails transport filter
filter(nearest_stop_distance_rail >= min_distance_stop_rail & nearest_stop_distance_rail <= max_distance_stop_rail)
##### PLOT
if (nrow(selection) == 0) {
print("There are no listings that match your criteria. Please broaden your search parameters.")
} else {
mymap <- leaflet() %>%
addTiles() %>%
setView(
lng = 19.0513,
lat = 47.4925,
zoom = 12)
for (i in seq_len(nrow(selection))) {
lat <- selection$lat[i]
lon <- selection$lon[i]
url <- selection$url[i]
price <- selection$price[i]
mymap <- mymap %>%
addMarkers(lng = lon,
lat = lat,
popup = paste0(price,
" HUF, ",
"<a href='",
url,
"' target='_blank'>See listing</a>"))
}
mymap
}
}
show_options(flats,
my_animals_choice,
my_condition_choice,
my_elevator_choice,
my_quarter_choice,
my_min_price,
my_max_price,
my_rooms_choice,
my_min_size,
my_max_size,
my_min_distance_center,
my_max_distance_center,
my_min_distance_stop_any,
my_max_distance_stop_any,
my_min_distance_stop_rail,
my_max_distance_stop_rail)
show_options(flats,
my_animals_choice,
my_condition_choice,
my_elevator_choice,
my_quarter_choice,
my_min_price,
my_max_price,
my_rooms_choice,
my_min_size,
my_max_size,
my_min_distance_center,
my_max_distance_center,
my_min_distance_stop_any,
my_max_distance_stop_any,
my_min_distance_stop_rail,
my_max_distance_stop_rail)
# Does the flat allow pets?
my_animals_choice <- c("yes",
"only small pets")
# What is the condition of the flat?
my_condition_choice <- c("newly built",
"like new",
"renovated",
"good")
# Does the building have an elevator?
my_elevator_choice <- c("yes")
# Which quarter of Budapest is the flat located in?
my_quarter_choice <- c(1, 2, 3, 4, 5,
6, 7, 8, 9, 10,
11, 12, 13, 14, 15,
16, 17, 18, 19, 20,
21, 22, 23)
# What is the price range for the apartment?
my_min_price <- 50000
my_max_price <- 150000
# How many rooms does the flat have?
my_rooms_choice <- c(2, 3, 4, 5)
# How big is the flat?
my_min_size <- 40
my_max_size <- 120
# How far in meters is the flat from the center of Budapest?
my_min_distance_center <- 0
my_max_distance_center <- 5000
# How far in meters is the flat from the nearest public transport stop of any kind?
my_min_distance_stop_any <- 0
my_max_distance_stop_any <- 100
# How far in meters is the flat from the nearest railway-type public transport stop?
my_min_distance_stop_rail <- 0
my_max_distance_stop_rail <- 7000
show_options(flats,
my_animals_choice,
my_condition_choice,
my_elevator_choice,
my_quarter_choice,
my_min_price,
my_max_price,
my_rooms_choice,
my_min_size,
my_max_size,
my_min_distance_center,
my_max_distance_center,
my_min_distance_stop_any,
my_max_distance_stop_any,
my_min_distance_stop_rail,
my_max_distance_stop_rail)
citation("leaflet")
citation("geosphere")
citation("tidyverse")

# clean of unnecessary characters
flats$latitude <- gsub("\(",
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str <- gsub("\\.kerület.*",
"",
flats$location_str)
flats$location_str <- gsub(".kerület, .*",
"",
flats$location_str)
flats <- read.csv("data/flats.csv")
flats <- flats %>%
select(!c(X,
common_cost,
date_scraped,
description,
furniture,
image_folder_name,
image_urls,
title))
# convert to factor
flats$animals <- as.factor(flats$animals)
# convert contents to English
levels(flats$animals) <- c(NA,
"only small pets",
"yes",
"no")
# convert to factor
flats$condition <- as.factor(flats$condition)
# convert contents to English
levels(flats$condition) <- c(NA,
"in need of renovation",
"renovated",
"good",
"newly built",
"like new")
# convert to factor
flats$elevator <- as.factor(flats$elevator)
# convert contents to English
levels(flats$elevator)
levels(flats$elevator) <- c(NA,
"no",
"yes")
# convert to factor
flats$energy_certificate <- as.factor(flats$energy_certificate)
# convert contents to English
levels(flats$energy_certificate) <- c(NA,
"a",
"a+",
"b",
"c",
"d",
"e",
"f",
"g",
"h",
"i" )
# convert to factor
flats$garden <- as.factor(flats$garden)
# convert contents to English
levels(flats$garden) <- c(NA,
"yes",
"no")
# convert to factor
flats$heating_type <- as.factor(flats$heating_type)
# convert contents to English
levels(flats$heating_type) <- c(NA,
"other",
"central heating with own meter (entire building)",
"electric",
"circulated hot water",
"gas convection",
"central heating (entire building)",
"fireplace",
"central heating (apartment)",
"district heating")
# convert to factor
flats$type <- as.factor(flats$type)
# convert contents to English
levels(flats$type) <- c(NA,
"other",
"prefabricated concrete",
"brick")
# convert to factor
flats$view_type <- as.factor(flats$view_type)
# convert contents to English
levels(flats$view_type) <- c(NA,
"garden",
"whole panorama",
"partial panorama",
"nature",
"yard",
"street")
flats$price <- as.numeric(flats$price)
flats$rooms <- as.numeric(flats$rooms)
flats$size <- as.numeric(flats$size)
# rename column for easier understanding
names(flats)[names(flats) == "price"] <- "price_per_sq_meter"
# create column for total price by multiplying the price per square meter
# with the amount of square meters
flats$price_total <- flats$price_per_sq_meter * flats$size
# separate into 2 columns by comma
flats <- flats %>%
separate_wider_delim(location,
delim = ",",
names = c("latitude",
"longitude"))
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str2 <- gsub(". kerület, .*",
"",
flats$location_str)
flats$location_str2 <- gsub(". kerület,* *.*",
"",
flats$location_str)
flats$location_str <- gsub(". kerület,* *.*",
"",
flats$location_str)
flats$location_str <- as.roman(flats$location_str)
# install packages
#install.packages("tidyverse")
# load packages
library(tidyverse)
library(tidyr)
flats <- read.csv("data/flats.csv")
flats <- flats %>%
select(!c(X,
common_cost,
date_scraped,
description,
furniture,
image_folder_name,
image_urls,
title))
# convert to factor
flats$animals <- as.factor(flats$animals)
# convert contents to English
levels(flats$animals) <- c(NA,
"only small pets",
"yes",
"no")
# convert to factor
flats$condition <- as.factor(flats$condition)
# convert contents to English
levels(flats$condition) <- c(NA,
"in need of renovation",
"renovated",
"good",
"newly built",
"like new")
# convert to factor
flats$elevator <- as.factor(flats$elevator)
# convert contents to English
levels(flats$elevator)
levels(flats$elevator) <- c(NA,
"no",
"yes")
# convert to factor
flats$energy_certificate <- as.factor(flats$energy_certificate)
# convert contents to English
levels(flats$energy_certificate) <- c(NA,
"a",
"a+",
"b",
"c",
"d",
"e",
"f",
"g",
"h",
"i" )
# convert to factor
flats$garden <- as.factor(flats$garden)
# convert contents to English
levels(flats$garden) <- c(NA,
"yes",
"no")
# convert to factor
flats$heating_type <- as.factor(flats$heating_type)
# convert contents to English
levels(flats$heating_type) <- c(NA,
"other",
"central heating with own meter (entire building)",
"electric",
"circulated hot water",
"gas convection",
"central heating (entire building)",
"fireplace",
"central heating (apartment)",
"district heating")
# convert to factor
flats$type <- as.factor(flats$type)
# convert contents to English
levels(flats$type) <- c(NA,
"other",
"prefabricated concrete",
"brick")
# convert to factor
flats$view_type <- as.factor(flats$view_type)
# convert contents to English
levels(flats$view_type) <- c(NA,
"garden",
"whole panorama",
"partial panorama",
"nature",
"yard",
"street")
flats$price <- as.numeric(flats$price)
flats$rooms <- as.numeric(flats$rooms)
flats$size <- as.numeric(flats$size)
# rename column for easier understanding
names(flats)[names(flats) == "price"] <- "price_per_sq_meter"
# create column for total price by multiplying the price per square meter
# with the amount of square meters
flats$price_total <- flats$price_per_sq_meter * flats$size
# separate into 2 columns by comma
flats <- flats %>%
separate_wider_delim(location,
delim = ",",
names = c("latitude",
"longitude"))
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str <- gsub(". kerület,* *.*",
"",
flats$location_str)
flats$location_str <- as.roman(flats$location_str)
# install packages
#install.packages("tidyverse")
# load packages
library(tidyverse)
library(tidyr)
flats <- read.csv("data/flats.csv")
flats <- flats %>%
select(!c(X,
common_cost,
date_scraped,
description,
furniture,
image_folder_name,
image_urls,
title))
# convert to factor
flats$animals <- as.factor(flats$animals)
# convert contents to English
levels(flats$animals) <- c(NA,
"only small pets",
"yes",
"no")
# convert to factor
flats$condition <- as.factor(flats$condition)
# convert contents to English
levels(flats$condition) <- c(NA,
"in need of renovation",
"renovated",
"good",
"newly built",
"like new")
# convert to factor
flats$elevator <- as.factor(flats$elevator)
# convert contents to English
levels(flats$elevator)
levels(flats$elevator) <- c(NA,
"no",
"yes")
# convert to factor
flats$energy_certificate <- as.factor(flats$energy_certificate)
# convert contents to English
levels(flats$energy_certificate) <- c(NA,
"a",
"a+",
"b",
"c",
"d",
"e",
"f",
"g",
"h",
"i" )
# convert to factor
flats$garden <- as.factor(flats$garden)
# convert contents to English
levels(flats$garden) <- c(NA,
"yes",
"no")
# convert to factor
flats$heating_type <- as.factor(flats$heating_type)
# convert contents to English
levels(flats$heating_type) <- c(NA,
"other",
"central heating with own meter (entire building)",
"electric",
"circulated hot water",
"gas convection",
"central heating (entire building)",
"fireplace",
"central heating (apartment)",
"district heating")
# convert to factor
flats$type <- as.factor(flats$type)
# convert contents to English
levels(flats$type) <- c(NA,
"other",
"prefabricated concrete",
"brick")
# convert to factor
flats$view_type <- as.factor(flats$view_type)
# convert contents to English
levels(flats$view_type) <- c(NA,
"garden",
"whole panorama",
"partial panorama",
"nature",
"yard",
"street")
flats$price <- as.numeric(flats$price)
flats$rooms <- as.numeric(flats$rooms)
flats$size <- as.numeric(flats$size)
# rename column for easier understanding
names(flats)[names(flats) == "price"] <- "price_per_sq_meter"
# create column for total price by multiplying the price per square meter
# with the amount of square meters
flats$price_total <- flats$price_per_sq_meter * flats$size
# separate into 2 columns by comma
flats <- flats %>%
separate_wider_delim(location,
delim = ",",
names = c("latitude",
"longitude"))
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str <- gsub(". kerület,* *.*",
"",
flats$location_str)
flats$location_str <- gsub(" ",
"",
flats$location_str)
flats$quarter <- as.roman(flats$location_str)
flats$quarter <- as.numeric(flats$quarter)
flats$location_str <- as.roman(flats$location_str)
flats$location_str <- as.numeric(flats$location_str)
names(flats)[names(flats) == "location_str"] <- "quarter"
View(flats)
# install packages
#install.packages("tidyverse")
# load packages
library(tidyverse)
library(tidyr)
flats <- read.csv("data/flats.csv")
flats <- flats %>%
select(!c(X,
common_cost,
date_scraped,
description,
furniture,
image_folder_name,
image_urls,
title))
# convert to factor
flats$animals <- as.factor(flats$animals)
# convert contents to English
levels(flats$animals) <- c(NA,
"only small pets",
"yes",
"no")
# convert to factor
flats$condition <- as.factor(flats$condition)
# convert contents to English
levels(flats$condition) <- c(NA,
"in need of renovation",
"renovated",
"good",
"newly built",
"like new")
# convert to factor
flats$elevator <- as.factor(flats$elevator)
# convert contents to English
levels(flats$elevator)
levels(flats$elevator) <- c(NA,
"no",
"yes")
# convert to factor
flats$energy_certificate <- as.factor(flats$energy_certificate)
# convert contents to English
levels(flats$energy_certificate) <- c(NA,
"a",
"a+",
"b",
"c",
"d",
"e",
"f",
"g",
"h",
"i" )
# convert to factor
flats$garden <- as.factor(flats$garden)
# convert contents to English
levels(flats$garden) <- c(NA,
"yes",
"no")
# convert to factor
flats$heating_type <- as.factor(flats$heating_type)
# convert contents to English
levels(flats$heating_type) <- c(NA,
"other",
"central heating with own meter (entire building)",
"electric",
"circulated hot water",
"gas convection",
"central heating (entire building)",
"fireplace",
"central heating (apartment)",
"district heating")
# convert to factor
flats$type <- as.factor(flats$type)
# convert contents to English
levels(flats$type) <- c(NA,
"other",
"prefabricated concrete",
"brick")
# convert to factor
flats$view_type <- as.factor(flats$view_type)
# convert contents to English
levels(flats$view_type) <- c(NA,
"garden",
"whole panorama",
"partial panorama",
"nature",
"yard",
"street")
flats$price <- as.numeric(flats$price)
flats$rooms <- as.numeric(flats$rooms)
flats$size <- as.numeric(flats$size)
# rename column for easier understanding
names(flats)[names(flats) == "price"] <- "price_per_sq_meter"
# create column for total price by multiplying the price per square meter
# with the amount of square meters
flats$price_total <- flats$price_per_sq_meter * flats$size
# separate into 2 columns by comma
flats <- flats %>%
separate_wider_delim(location,
delim = ",",
names = c("latitude",
"longitude"))
# clean of unnecessary characters
flats$latitude <- gsub("\\(",
"",
flats$latitude)
flats$longitude <- gsub("\\)",
"",
flats$longitude)
# ensure appropriate encoding
flats$latitude <- as.numeric(flats$latitude)
flats$longitude <- as.numeric(flats$longitude)
flats$location_str <- gsub("Budapest, ",
"",
flats$location_str)
flats$location_str <- gsub(". kerület,* *.*",
"",
flats$location_str)
flats$location_str <- gsub(" ",
"",
flats$location_str)
flats$location_str <- as.roman(flats$location_str)
flats$location_str <- as.numeric(flats$location_str)
names(flats)[names(flats) == "location_str"] <- "quarter"
View(flats)
